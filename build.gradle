import org.jetbrains.changelog.ExtensionsKt

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.owasp:dependency-check-gradle:10.0.3'
    }
}

plugins {
    id 'org.jetbrains.changelog'
    id 'net.researchgate.release'
    id 'org.sonarqube'
    id 'jacoco'
}

apply plugin: 'org.owasp.dependencycheck'

group 'dk.sunepoulsen.tes-foundation'
version "${project.property('version')}"

tasks.register('allWrappers', Wrapper) {
    gradleVersion = "${project.property('gradle.version')}"
}

apply from: "${rootProject.projectDir}/gradle/changelog.gradle"

release {
    tagTemplate = 'v${version}'
    git {
        requireBranch.set('main')
    }
}

tasks.register('updateChangelogs') {
    subprojects.each {
        dependsOn("${it.name}:patchChangelog")
    }
    dependsOn('patchChangelog')
}

tasks.register('publishArtifacts') {
    subprojects.each {
        dependsOn("${it.name}:publish")
    }
}

tasks.afterReleaseBuild.dependsOn tasks.updateChangelogs
tasks.afterReleaseBuild.dependsOn tasks.publishArtifacts

subprojects {
    apply plugin: 'java-library'
    apply plugin: 'groovy'
    apply plugin: 'maven-publish'
    apply plugin: 'org.jetbrains.changelog'
    apply plugin: 'jacoco'

    group 'dk.sunepoulsen.tes-foundation'

    repositories {
        mavenLocal()
        mavenCentral()

        maven {
            url "$mavenRepositoryBaseUrl/$mavenRepositorySnapshots"
            allowInsecureProtocol = true
        }
        maven {
            url "$mavenRepositoryBaseUrl/$mavenRepositoryReleases"
            allowInsecureProtocol = true
        }
    }

    publishing {
        publications {
            maven(MavenPublication) {
                from components.java
            }
        }

        repositories {
            maven {
                url = "$mavenRepositoryBaseUrl/" + (
                    version ==~ /^\d+\.\d+\.\d+$/ ?
                        "$mavenRepositoryReleases" :
                        "$mavenRepositorySnapshots"
                )
                allowInsecureProtocol = true
                credentials {
                    username = "$mavenRepositoryUsername"
                    password = "$mavenRepositoryPassword"
                }
            }
        }
    }

    java {
        toolchain {
            languageVersion = JavaLanguageVersion.of(project.property('java.version').toString())
        }
    }

    dependencies {
        // Lombok
        compileOnly 'org.projectlombok:lombok:1.18.36'
        annotationProcessor 'org.projectlombok:lombok:1.18.36'

        // Logging
        implementation 'ch.qos.logback:logback-classic:1.5.12'
        implementation 'org.slf4j:log4j-over-slf4j:2.0.16'

        // JUnit
        testImplementation 'org.junit.vintage:junit-vintage-engine:5.11.3'
        testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.11.3'

        // Spock
        testImplementation 'org.apache.groovy:groovy-all:4.0.24'
        testImplementation 'org.spockframework:spock-core:2.3-groovy-4.0'
        testImplementation 'net.bytebuddy:byte-buddy:1.15.10'
        testImplementation 'org.objenesis:objenesis:3.4'
    }

    test {
        useJUnitPlatform()
    }

    apply from: "${rootProject.projectDir}/gradle/changelog.gradle"

    jacocoTestReport {
        reports {
            xml.required = true
        }
    }

    dependencyCheck {
        format='ALL'
    }

    tasks.jacocoTestReport.dependsOn tasks.test

}

dependencyCheck {
    nvd {
        apiKey = "$owaspDependencyCheckApiKey".toString()
    }
}

sonar {
    properties {
        property "sonar.projectName", "TES Foundation"
        property "sonar.projectKey", "tes-foundation"

        property 'sonar.dependencyCheck.severity.blocker', '9.0'
        property 'sonar.dependencyCheck.severity.critical', '7.0'
        property 'sonar.dependencyCheck.severity.major', '4.0'
        property 'sonar.dependencyCheck.severity.minor', '0.0'

        property 'sonar.dependencyCheck.jsonReportPath', "build/reports/dependency-check-report.json"
        property 'sonar.dependencyCheck.htmlReportPath', "build/reports/dependency-check-report.html"
    }
}
